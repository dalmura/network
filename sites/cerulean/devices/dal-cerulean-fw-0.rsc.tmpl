#
# dal-cerulean-fw-0
#

#
# Naming
#

/system/identity/set name="dal-cerulean-fw-0"


#
# Network Overview
#

# 100 = GENERAL         = 192.168.64.0/25    = 126
# 101 = GUEST           = 192.168.64.128/26  =  62
# 102 = VPN             = 192.168.64.192/26  =  62
# 103 = SERVERS         = 192.168.65.0/25    = 126
# 104 = SERVERS_STAGING = 192.168.65.128/25  = 126
# 105 = IOT_INTERNET    = 192.168.66.0/25    = 126
# 106 = IOT_RESTRICTED  = 192.168.66.128/25  = 126
# 107 =                 = 192.168.67.0/25    = 126
# 108 = SERVICES        = 192.168.67.128/26  =  62
# 109 = MANAGEMENT      = 192.168.67.192/26  =  62


#
# Bridge
#

/interface/bridge/add name=CORE vlan-filtering=no

/interface/bridge/port

# untagged - GENERAL
add bridge=CORE interface=ether2 pvid=100 comment="dal-cerulean-sw-0"

# untagged - MANAGEMENT
add bridge=CORE interface=ether3 pvid=109 comment="local management"

# trunk
add bridge=CORE interface=ether4 comment=""
add bridge=CORE interface=ether5 comment=""
add bridge=CORE interface=sfp1   comment=""

/interface/bridge/vlan
add bridge=CORE tagged=CORE,ether4,ether5,sfp1 untagged=ether2 vlan-ids=100
add bridge=CORE tagged=CORE,ether4,ether5,sfp1 vlan-ids=101
add bridge=CORE tagged=CORE,ether4,ether5,sfp1 vlan-ids=102
add bridge=CORE tagged=CORE,ether4,ether5,sfp1 vlan-ids=103
add bridge=CORE tagged=CORE,ether4,ether5,sfp1 vlan-ids=104
add bridge=CORE tagged=CORE,ether4,ether5,sfp1 vlan-ids=105
add bridge=CORE tagged=CORE,ether4,ether5,sfp1 vlan-ids=106
add bridge=CORE tagged=CORE,ether4,ether5,sfp1 vlan-ids=107
add bridge=CORE tagged=CORE,ether4,ether5,sfp1 vlan-ids=108
add bridge=CORE tagged=CORE,ether4,ether5,sfp1 untagged=ether3 vlan-ids=109


#
# IP Addressing & Routing
#

# General VLAN
/interface/vlan/add interface=CORE name=GENERAL_VLAN vlan-id=100
/ip/address/add interface=GENERAL_VLAN address=192.168.64.1/25
/ip/pool/add name=general-dhcp ranges=192.168.64.10-192.168.64.126
/ip/dhcp-server/add address-pool=general-dhcp interface=GENERAL_VLAN name=general-dhcp disabled=no
/ip/dhcp-server/network/add address=192.168.64.0/25 dns-server=192.168.64.1 gateway=192.168.64.1 comment="GENERAL_VLAN"

# Guest VLAN
/interface/vlan/add interface=CORE name=GUEST_VLAN vlan-id=101
/ip/address/add interface=GUEST_VLAN address=192.168.64.129/26
/ip/pool/add name=guest-dhcp ranges=192.168.64.130-192.168.64.190
/ip/dhcp-server/add address-pool=guest-dhcp interface=GUEST_VLAN name=guest-dhcp disabled=no
/ip/dhcp-server/network/add address=192.168.64.128/26 dns-server=192.168.64.129 gateway=192.168.64.129 comment="GUEST_VLAN"

# VPN VLAN
/interface/vlan/add interface=CORE name=VPN_VLAN vlan-id=102
/ip/address/add interface=VPN_VLAN address=192.168.64.193/26

# Servers VLAN
/interface/vlan/add interface=CORE name=SERVERS_VLAN vlan-id=103
/ip/address/add interface=SERVERS_VLAN address=192.168.65.1/25
/ip/pool/add name=servers-static ranges=192.168.65.2-192.168.65.63
/ip/pool/add name=servers-dhcp ranges=192.168.65.64-192.168.65.126
/ip/dhcp-server/add address-pool=servers-dhcp interface=SERVERS_VLAN name=servers-dhcp disabled=no
/ip/dhcp-server/network/add address=192.168.65.0/25 dns-server=192.168.65.1 gateway=192.168.65.1 comment="SERVERS_VLAN"

# Servers Staging VLAN
/interface/vlan/add interface=CORE name=SERVERS_STAGING_VLAN vlan-id=104
/ip/address/add interface=SERVERS_STAGING_VLAN address=192.168.65.129/25
/ip/pool/add name=servers-staging-static ranges=192.168.65.129-192.168.65.149
/ip/pool/add name=servers-staging-dhcp ranges=192.168.65.150-192.168.65.254
/ip/dhcp-server/add address-pool=servers-staging-dhcp interface=SERVERS_STAGING_VLAN name=servers-staging-dhcp disabled=no
/ip/dhcp-server/network/add address=192.168.65.128/25 dns-server=192.168.65.129 gateway=192.168.65.129 comment="SERVERS_STAGING_VLAN"

# IOT Internet VLAN
/interface/vlan/add interface=CORE name=IOT_INTERNET_VLAN vlan-id=105
/ip/address/add interface=IOT_INTERNET_VLAN address=192.168.66.1/25
/ip/pool/add name=iot-internet-static ranges=192.168.66.1-192.168.66.69
/ip/pool/add name=iot-internet-dhcp ranges=192.168.66.70-192.168.66.126
/ip/dhcp-server/add address-pool=iot-internet-dhcp interface=IOT_INTERNET_VLAN name=iot-internet-dhcp disabled=no
/ip/dhcp-server/network/add address=192.168.66.0/25 dns-server=192.168.66.1 gateway=192.168.66.1 comment="IOT_INTERNET_VLAN"

# IOT Restricted VLAN
/interface/vlan/add interface=CORE name=IOT_RESTRICTED_VLAN vlan-id=106
/ip/address/add interface=IOT_RESTRICTED_VLAN address=192.168.66.129/25
/ip/pool/add name=iot-restricted-static ranges=192.168.66.129-192.168.66.199
/ip/pool/add name=iot-restricted-dhcp ranges=192.168.66.200-192.168.66.254
/ip/dhcp-server/add address-pool=iot-restricted-dhcp interface=IOT_RESTRICTED_VLAN name=iot-restricted-dhcp disabled=no
/ip/dhcp-server/network/add address=192.168.66.128/25 dns-server=192.168.66.129 gateway=192.168.66.129 comment="IOT_RESTRICTED_VLAN"

# Services VLAN
/interface/vlan/add interface=CORE name=SERVICES_VLAN vlan-id=108
/ip/address/add address=192.168.67.129/26 interface=SERVICES_VLAN

# Management VLAN
/interface/vlan/add interface=CORE name=MANAGEMENT_VLAN vlan-id=109
/ip/address/add address=192.168.67.193/26 interface=MANAGEMENT_VLAN
/ip/pool/add name=management-static ranges=192.168.67.193-192.168.67.249
/ip/pool/add name=management-dhcp ranges=192.168.67.250-192.168.67.254
/ip/dhcp-server/add address-pool=management-dhcp interface=MANAGEMENT_VLAN name=management-dhcp disabled=no
/ip/dhcp-server/network/add address=192.168.67.192/26 dns-server=192.168.67.193 gateway=192.168.67.193 comment="MANAGEMENT_VLAN"

{% if static_dhcp_leases -%}
# Optional Static DHCP Leases
/ip/dhcp-server/lease
{% for lease in static_dhcp_leases -%}
  add address={{ lease.address }} server={{ lease.server }} mac-address={{ lease.mac_address }} comment="{{ lease.comment }}"
{% endfor -%}
{% endif %}

#
# Firewall & NAT
#

/interface/list
add name=WAN
add name=WAN_HUB
add name=WAN_SPOKE
add name=VLAN
add name=LAN
add name=INTERNET_ONLY
add name=BLACKHOLE
add name=MANAGEMENT
add name=INTERNAL_PUBLIC_ACCESS
add name=INTERNAL_PRIVATE_ACCESS

/interface/list/member
add interface=ether1               list=WAN
add interface=GENERAL_VLAN         list=VLAN
add interface=GUEST_VLAN           list=VLAN
add interface=VPN_VLAN             list=VLAN
add interface=SERVERS_VLAN         list=VLAN
add interface=SERVERS_STAGING_VLAN list=VLAN
add interface=IOT_INTERNET_VLAN    list=VLAN
add interface=IOT_RESTRICTED_VLAN  list=VLAN
add interface=SERVICES_VLAN        list=VLAN
add interface=MANAGEMENT_VLAN      list=VLAN
add interface=GENERAL_VLAN         list=LAN
add interface=SERVERS_VLAN         list=LAN
add interface=SERVICES_VLAN        list=LAN
add interface=MANAGEMENT_VLAN      list=LAN
add interface=GUEST_VLAN           list=INTERNET_ONLY
add interface=SERVERS_STAGING_VLAN list=INTERNET_ONLY
add interface=IOT_INTERNET_VLAN    list=INTERNET_ONLY
add interface=IOT_RESTRICTED_VLAN  list=BLACKHOLE
add interface=MANAGEMENT_VLAN      list=MANAGEMENT
add interface=GENERAL_VLAN         list=INTERNAL_PUBLIC_ACCESS
add interface=GUEST_VLAN           list=INTERNAL_PUBLIC_ACCESS
add interface=IOT_INTERNET_VLAN    list=INTERNAL_PUBLIC_ACCESS
add interface=GENERAL_VLAN         list=INTERNAL_PRIVATE_ACCESS

/ip/firewall/filter

# Input Chain
add chain=input action=accept connection-state=established,related,untracked comment="accept established,related,untracked"
add chain=input action=drop connection-state=invalid comment="drop invalid"
add chain=input action=accept dst-address=127.0.0.1 comment="accept to local loopback (for CAPsMAN)"

# Add more general input related access here
add chain=input action=accept protocol=icmp in-interface-list=LAN comment="accept ICMP from non-restricted"
add chain=input action=accept protocol=udp dst-port=53 in-interface-list=VLAN comment="accept DNS from internal networks"
add chain=input action=accept src-address=0.0.0.0 dst-address=255.255.255.255 protocol=udp src-port=68 dst-port=67 in-interface-list=VLAN comment="allow DHCP broadcasts"
add chain=input action=accept in-interface-list=MANAGEMENT comment="allow MANAGEMENT access"

# Wireguard
add chain=input action=accept protocol=udp dst-port=13231 in-interface-list=WAN comment="Wireguard Roadwarrior Tunnels"
add chain=input action=accept protocol=udp dst-port=13232 in-interface-list=WAN comment="Wireguard Site Tunnels"

# Finally drop everything else
add chain=input action=accept log=yes log-prefix=input-catch comment="catchall" disabled=yes
add chain=input action=drop log=no log-prefix=input-drop comment="drop all other input"

# Forward Chain
add chain=forward action=fasttrack-connection connection-state=established comment="fasttrack"
add chain=forward action=accept connection-state=established,related,untracked comment="accept established,related,untracked"
add chain=forward action=drop connection-state=invalid comment="drop invalid"
add chain=forward action=drop in-interface-list=WAN connection-state=new connection-nat-state=!dstnat comment="drop all from WAN not DSTNATed"

# Add more general forward related access here

## Allow internet access
add chain=forward action=accept in-interface-list=LAN out-interface-list=WAN comment="accept LAN to WAN"
add chain=forward action=accept connection-state=new in-interface-list=INTERNET_ONLY out-interface-list=WAN comment="accept INTERNET_ONLY to WAN"

## Allow MANAGEMENT => SERVERS_VLAN
add chain=forward action=accept in-interface-list=MANAGEMENT out-interface=SERVERS_VLAN comment="accept MANAGEMENT => SERVERS_VLAN"
## Allow MANAGEMENT => SERVERS_STAGING_VLAN
add chain=forward action=accept in-interface-list=MANAGEMENT out-interface=SERVERS_STAGING_VLAN comment="accept MANAGEMENT => SERVERS_STAGING_VLAN"
## Allow MANAGEMENT => WAN_HUB
add chain=forward action=accept in-interface-list=MANAGEMENT out-interface-list=WAN_HUB comment="accept MANAGEMENT => WAN_HUB"

## Allow WAN => SERVERS_VLAN (Plex dst-nat traffic)
add chain=forward action=accept protocol=tcp dst-port=32400 out-interface=GENERAL_VLAN in-interface-list=WAN connection-nat-state=dstnat comment="accept DSTNAT => PLEX"

## Allow INTERNAL_PUBLIC_ACCESS => SERVERS_VLAN (Plex local traffic)
add chain=forward action=accept protocol=tcp dst-port=32400 in-interface-list=INTERNAL_PUBLIC_ACCESS out-interface=SERVERS_VLAN comment="accept INTERNAL_PUBLIC_ACCESS => PLEX"

## Allow GENERAL_VLAN => IOT_INTERNET_VLAN
add chain=forward action=accept in-interface=GENERAL_VLAN out-interface=IOT_INTERNET_VLAN comment="accept GENERAL_VLAN => IOT_INTERNET_VLAN" log-prefix="general2iot"

## Allow GENERAL_VLAN => IOT_RESTRICTED_VLAN
add chain=forward action=accept in-interface=GENERAL_VLAN out-interface=IOT_RESTRICTED_VLAN comment="accept GENERAL_VLAN => IOT_RESTRICTED_VLAN" log-prefix="general2restricted"

## Allow MANAGEMENT => VLAN
add chain=forward action=accept in-interface-list=MANAGEMENT out-interface-list=VLAN comment="accept MANAGEMENT => VLAN" log-prefix="man2vlan"

## Allow LAN => WAN_HUB
add chain=forward action=accept in-interface-list=LAN out-interface-list=WAN_HUB comment="accept LAN => WAN_HUB" log-prefix="lan2wanhub"

## Allow WAN_HUB => SERVERS_VLAN
add chain=forward action=accept in-interface-list=WAN_HUB out-interface=SERVERS_VLAN comment="accept WAN_HUB => SERVERS_VLAN" log-prefix="wanhub2servers"

# Finally drop everything else
add chain=forward action=accept log=yes log-prefix=forward-catch comment="catchall" disabled=yes
add chain=forward action=drop log=no log-prefix=forward-drop comment="drop all other forward"


#
# NAT
#

/ip/firewall/nat

# Masquerade outgoing packets as WAN IP
add chain=srcnat out-interface-list=WAN ipsec-policy=out,none action=masquerade comment="Default masquerade"

# Add more general NAT access here

## dst-nat Plex => Arturia
add chain=dstnat action=dst-nat to-address=192.168.64.10 to-ports=32400 protocol=tcp in-interface-list=WAN dst-port=32405 ipsec-policy=in,none


#
# VLAN Security
#

/interface/bridge/port
set bridge=CORE ingress-filtering=yes frame-types=admit-only-untagged-and-priority-tagged [find interface=ether2]
set bridge=CORE ingress-filtering=yes frame-types=admit-only-untagged-and-priority-tagged [find interface=ether3]
set bridge=CORE ingress-filtering=yes frame-types=admit-only-vlan-tagged [find interface=ether4]
set bridge=CORE ingress-filtering=yes frame-types=admit-only-vlan-tagged [find interface=ether5]
set bridge=CORE ingress-filtering=yes frame-types=admit-only-vlan-tagged [find interface=sfp1]


#
# MAC Server
#

/ip/neighbor/discovery-settings/set discover-interface-list=MANAGEMENT
/tool/mac-server/mac-winbox/set allowed-interface-list=MANAGEMENT
/tool/mac-server/set allowed-interface-list=MANAGEMENT


#
# Enable VLAN Filtering
#

/interface/bridge/set CORE vlan-filtering=yes


#
# WAN Setup
#

/ip/dhcp-client/add interface=ether1 use-peer-dns=no use-peer-ntp=no add-default-route=yes dhcp-options=""

# General router settings
/ip/dns/set allow-remote-requests=yes servers="1.1.1.1,8.8.8.8"
/ip/cloud/set ddns-enabled=yes ddns-update-interval=15m update-time=yes

# Wait until the system clock updates
# Anything below here is sensitive to system time
/log info "Waiting for system clock update"
:do { :delay 1s } while=([:timestamp] < 2728w)


#
# Certificates
#

/certificate
{% if device_upgrade -%}
import name=root-ca passphrase="{{ cert_export_passphrase }}" file-name=internal-cerulean-root-ca.crt
import name=root-ca passphrase="{{ cert_export_passphrase }}" file-name=internal-cerulean-root-ca.key
import name=server  passphrase="{{ cert_export_passphrase }}" file-name=internal-cerulean.crt
import name=server  passphrase="{{ cert_export_passphrase }}" file-name=internal-cerulean.key

:delay 4

set root-ca trusted=yes
set server  trusted=yes
{% else %}
add name=ca days-valid=10950 common-name=fw-0.cerulean.dalmura.cloud key-usage=key-cert-sign,crl-sign
add name=server days-valid=10950 common-name=fw-0.cerulean.dalmura.cloud subject-alt-name=DNS:fw-0.cerulean.dalmura.cloud organization=dalmura unit=cerulean

sign ca name=root-ca
:delay 2
sign ca=root-ca server name=server
:delay 2

set root-ca trusted=yes
set server  trusted=yes

# Export certs for use in remote systems
# No private key material is exported here, just the public crt
export-certificate file-name=remote-cerulean type=pem server
export-certificate file-name=remote-cerulean-root-ca type=pem root-ca

{% if cert_export_passphrase %}
# Private key material is exported here
export-certificate file-name=internal-cerulean type=pem export-passphrase="{{ cert_export_passphrase }}" server
export-certificate file-name=internal-cerulean-root-ca type=pem export-passphrase="{{ cert_export_passphrase }}" root-ca
{% endif %}
{% endif %}

# Web UI certificate
/ip/service/set www-ssl tls-version=only-1.2 address=192.168.67.192/26 certificate=server disabled=no
/ip/service/set api-ssl tls-version=only-1.2 address=192.168.67.192/26 certificate=server disabled=no


#
# Wireguard
#

{% for key, value in wireguard %}
{%- set interface = site ~ "-" ~ key -%}
# {{ interface }}
/interface/wireguard/add listen-port={{ value.listen_port | default(value=13231) }} name={{ interface }} private-key="{{ value.private_key }}"
/ip/address/add address={{ value.interface_address }} interface={{ interface }}
{% for item in value.interface_lists -%}
/interface/list/member/add interface={{ interface }} list={{ item }}
{% endfor %}
{% if value.peers is defined -%}
## {{ interface }} peers
{% for peer in value.peers -%}
/interface/wireguard/peers/add allowed-address={{ peer.allowed_address }}{% if peer.endpoint is defined %} endpoint-address={{ peer.endpoint.address }} endpoint-port={{ peer.endpoint.port }}{% endif %} interface={{ interface }} public-key="{{ peer.public_key }}" persistent-keepalive=25 preshared-key="{{ peer.preshared_key }}" comment="{{ peer.comment }}"
/ip/route/add dst-address={{ peer.allowed_address }} gateway="{{ interface }}" comment="Wireguard - {{ peer.comment }}"
{% endfor -%}
{% endif -%}
{% endfor %}
